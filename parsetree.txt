start : program 	<Line: 1-8>
 program : program unit 	<Line: 1-8>
  program : program unit 	<Line: 1-7>
   program : unit  	<Line: 1-3>
    unit : func_definition  	<Line: 1-3>
     func_definition : type_specifier ID LPAREN parameter_list RPAREN compound_statement 	<Line: 1-3>
      type_specifier	: INT 	<Line: 1-1>
       INT : int 	<Line: 1-1>
      ID : haha 	<Line: 1-1>
      LPAREN : ( 	<Line: 1-1>
      parameter_list  : type_specifier ID 	<Line: 1-1>
       type_specifier	: INT 	<Line: 1-1>
        INT : int 	<Line: 1-1>
       ID : p 	<Line: 1-1>
      RPAREN : ) 	<Line: 1-1>
      compound_statement : LCURL statements RCURL 	<Line: 1-3>
       LCURL : { 	<Line: 1-1>
       statements : statement 	<Line: 2-2>
        statement : var_declaration 	<Line: 2-2>
         var_declaration : type_specifier declaration_list SEMICOLON 	<Line: 2-2>
          type_specifier	: INT 	<Line: 2-2>
           INT : int 	<Line: 2-2>
          declaration_list : declaration_list COMMA ID 	<Line: 2-2>
           declaration_list : ID 	<Line: 2-2>
            ID : te 	<Line: 2-2>
           COMMA : , 	<Line: 2-2>
           ID : th 	<Line: 2-2>
          SEMICOLON : ; 	<Line: 2-2>
       RCURL : } 	<Line: 3-3>
   unit : func_definition  	<Line: 4-7>
    func_definition : type_specifier ID LPAREN RPAREN compound_statement 	<Line: 4-7>
     type_specifier	: INT 	<Line: 4-4>
      INT : int 	<Line: 4-4>
     ID : main 	<Line: 4-4>
     LPAREN : ( 	<Line: 4-4>
     RPAREN : ) 	<Line: 4-4>
     compound_statement : LCURL statements RCURL 	<Line: 4-7>
      LCURL : { 	<Line: 4-4>
      statements : statements statement 	<Line: 5-6>
       statements : statement 	<Line: 5-5>
        statement : var_declaration 	<Line: 5-5>
         var_declaration : type_specifier declaration_list SEMICOLON 	<Line: 5-5>
          type_specifier	: INT 	<Line: 5-5>
           INT : int 	<Line: 5-5>
          declaration_list : declaration_list COMMA ID LSQUARE CONST_INT RSQUARE 	<Line: 5-5>
           declaration_list : declaration_list COMMA ID 	<Line: 5-5>
            declaration_list : declaration_list COMMA ID 	<Line: 5-5>
             declaration_list : ID 	<Line: 5-5>
              ID : x 	<Line: 5-5>
             COMMA : , 	<Line: 5-5>
             ID : y 	<Line: 5-5>
            COMMA : , 	<Line: 5-5>
            ID : z 	<Line: 5-5>
           COMMA : , 	<Line: 5-5>
           ID : k 	<Line: 5-5>
           LSQUARE : [ 	<Line: 5-5>
           CONST_INT : 10 	<Line: 5-5>
           RSQUARE : ] 	<Line: 5-5>
          SEMICOLON : ; 	<Line: 5-5>
       statement : var_declaration 	<Line: 6-6>
        var_declaration : type_specifier declaration_list SEMICOLON 	<Line: 6-6>
         type_specifier	: INT 	<Line: 6-6>
          INT : int 	<Line: 6-6>
         declaration_list : ID 	<Line: 6-6>
          ID : m 	<Line: 6-6>
         SEMICOLON : ; 	<Line: 6-6>
      RCURL : } 	<Line: 7-7>
  unit : var_declaration  	<Line: 8-8>
   var_declaration : type_specifier declaration_list SEMICOLON 	<Line: 8-8>
    type_specifier	: INT 	<Line: 8-8>
     INT : int 	<Line: 8-8>
    declaration_list : declaration_list COMMA ID 	<Line: 8-8>
     declaration_list : declaration_list COMMA ID 	<Line: 8-8>
      declaration_list : ID 	<Line: 8-8>
       ID : a 	<Line: 8-8>
      COMMA : , 	<Line: 8-8>
      ID : b 	<Line: 8-8>
     COMMA : , 	<Line: 8-8>
     ID : c 	<Line: 8-8>
    SEMICOLON : ; 	<Line: 8-8>
