Line# 1: Token <INT> Lexeme int found
type_specifier	: INT
Line# 1: Token <ID> Lexeme haha found
Line# 1: Token <LPAREN> Lexeme ( found
Line# 1: Token <INT> Lexeme int found
type_specifier	: INT
Line# 1: Token <ID> Lexeme p found
parameter_list  : type_specifier ID
Line# 1: Token <RPAREN> Lexeme ) found
Line# 1: Token <LCURL> Lexeme { found
Line# 2: warning, 1 of tabs needed but got 0 tabs.
Line# 2: Token <INT> Lexeme int found
type_specifier	: INT
Line# 2: Token <ID> Lexeme te found
Line# 2: Token <COMMA> Lexeme , found
declaration_list : ID
Line# 2: Token <ID> Lexeme th found
Line# 2: Token <SEMICOLON> Lexeme ; found
declaration_list : declaration_list COMMA ID
var_declaration : type_specifier declaration_list SEMICOLON
statement : var_declaration
statements : statement
Line# 3: warning, 1 of tabs needed but got 0 tabs.
Line# 3: Token <ID> Lexeme te found
Line# 3: Token <ASSIGNOP> Lexeme = found
variable : ID
Line# 3: Token <CONST_INT> Lexeme 5 found
factor  : CONST_INT
unary_expression : factor
term : unary_expression
Line# 3: Token <SEMICOLON> Lexeme ; found
simple_expression : term
rel_expression : simple_expression 
logic_expression : rel_expression 
expression : variable ASSIGNOP logic_expression
expression_statement 	: expression SEMICOLON
statement : expression_statement
statements : statements statement
Line# 4: Token <RCURL> Lexeme } found
compound_statement : LCURL statements RCURL
	ScopeTable# 2
	3 --> <p,INT>
	6 --> <te,INT>
	9 --> <th,INT>
	ScopeTable# 1
func_definition : type_specifier ID LPAREN parameter_list RPAREN compound_statement
unit : func_definition 
program : unit 
Line# 5: Token <INT> Lexeme int found
type_specifier	: INT
Line# 5: Token <ID> Lexeme main found
Line# 5: Token <LPAREN> Lexeme ( found
Line# 5: Token <RPAREN> Lexeme ) found
Line# 5: Token <LCURL> Lexeme { found
Line# 6: warning, 1 of tabs needed but got 0 tabs.
Line# 6: Token <INT> Lexeme int found
type_specifier	: INT
Line# 6: Token <ID> Lexeme x found
Line# 6: Token <COMMA> Lexeme , found
declaration_list : ID
Line# 6: Token <ID> Lexeme y found
Line# 6: Token <COMMA> Lexeme , found
declaration_list : declaration_list COMMA ID
Line# 6: Token <ID> Lexeme z found
Line# 6: Token <COMMA> Lexeme , found
declaration_list : declaration_list COMMA ID
Line# 6: Token <ID> Lexeme k found
Line# 6: Token <LSQUARE> Lexeme [ found
Line# 6: Token <CONST_INT> Lexeme 10 found
Line# 6: Token <RSQUARE> Lexeme ] found
declaration_list : declaration_list COMMA ID LSQUARE CONST_INT RSQUARE
Line# 6: Token <SEMICOLON> Lexeme ; found
var_declaration : type_specifier declaration_list SEMICOLON
statement : var_declaration
statements : statement
Line# 7: warning, 1 of tabs needed but got 0 tabs.
Line# 7: Token <INT> Lexeme int found
type_specifier	: INT
Line# 7: Token <ID> Lexeme m found
Line# 7: Token <SEMICOLON> Lexeme ; found
declaration_list : ID
var_declaration : type_specifier declaration_list SEMICOLON
statement : var_declaration
statements : statements statement
Line# 8: warning, 1 of tabs needed but got 0 tabs.
Line# 8: Token <ID> Lexeme y found
Line# 8: Token <ASSIGNOP> Lexeme = found
variable : ID
Line# 8: Token <CONST_INT> Lexeme 2 found
factor  : CONST_INT
unary_expression : factor
term : unary_expression
Line# 8: Token <SEMICOLON> Lexeme ; found
simple_expression : term
rel_expression : simple_expression 
logic_expression : rel_expression 
expression : variable ASSIGNOP logic_expression
expression_statement 	: expression SEMICOLON
statement : expression_statement
statements : statements statement
Line# 9: warning, 1 of tabs needed but got 0 tabs.
Line# 9: Token <ID> Lexeme x found
Line# 9: Token <ASSIGNOP> Lexeme = found
variable : ID
Line# 9: Token <CONST_INT> Lexeme 1 found
factor  : CONST_INT
unary_expression : factor
term : unary_expression
Line# 9: Token <SEMICOLON> Lexeme ; found
simple_expression : term
rel_expression : simple_expression 
logic_expression : rel_expression 
expression : variable ASSIGNOP logic_expression
expression_statement 	: expression SEMICOLON
statement : expression_statement
statements : statements statement
Line# 10: Token <RCURL> Lexeme } found
compound_statement : LCURL statements RCURL
	ScopeTable# 3
	1 --> <y,INT>
	2 --> <z,INT>
	9 --> <k,ARRAY>
	11 --> <x,INT> <m,INT>
	ScopeTable# 1
	3 --> <haha,FUNCTION ,INT>
func_definition : type_specifier ID LPAREN RPAREN compound_statement
unit : func_definition 
program : program unit
Line# 11: Token <INT> Lexeme int found
type_specifier	: INT
Line# 11: Token <ID> Lexeme a found
Line# 11: Token <COMMA> Lexeme , found
declaration_list : ID
Line# 11: Token <ID> Lexeme b found
Line# 11: Token <COMMA> Lexeme , found
declaration_list : declaration_list COMMA ID
Line# 11: Token <ID> Lexeme c found
Line# 11: Token <SEMICOLON> Lexeme ; found
declaration_list : declaration_list COMMA ID
var_declaration : type_specifier declaration_list SEMICOLON
unit : var_declaration 
program : program unit
start : program
Total lines: 11
Total errors: 0
